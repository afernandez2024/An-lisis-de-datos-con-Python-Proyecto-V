# -*- coding: utf-8 -*-
"""sea_level_predictor.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18X3knmnM40pp1AAqIoBqgq8sE-U8vpwJ
"""

import pandas as pd
import matplotlib.pyplot as plt
from scipy.stats import linregress
import numpy as np

# Cargar los datos desde el archivo CSV
df = pd.read_csv('epa-sea-level.csv')
df.head()

# Crear gráfico de dispersión
plt.figure(figsize=(10, 6))
plt.scatter(df['Year'], df['CSIRO Adjusted Sea Level'], label='Datos', color='b')

# Realizar regresión lineal sobre todos los datos
slope, intercept, r_value, p_value, std_err = linregress(df['Year'], df['CSIRO Adjusted Sea Level'])

# Crear valores de predicción hasta 2050
years_extended = np.arange(df['Year'].min(), 2051)
sea_level_predicted = intercept + slope * years_extended

# Dibujar línea de mejor ajuste
plt.plot(years_extended, sea_level_predicted, 'r', label='Línea de mejor ajuste (1880-2050)', linewidth=2)

# Filtrar datos desde el año 2000
df_recent = df[df['Year'] >= 2000]

# Realizar regresión lineal sobre los datos desde 2000
slope_recent, intercept_recent, r_value_recent, p_value_recent, std_err_recent = linregress(df_recent['Year'], df_recent['CSIRO Adjusted Sea Level'])

# Crear valores de predicción para datos recientes hasta 2050
sea_level_predicted_recent = intercept_recent + slope_recent * years_extended

# Dibujar línea de mejor ajuste para datos recientes
plt.plot(years_extended, sea_level_predicted_recent, 'g', label='Línea de mejor ajuste (2000-2050)', linewidth=2)

# Personalización del gráfico
plt.title('Rise in Sea Level')
plt.xlabel('Year')
plt.ylabel('Sea Level (inches)')
plt.legend()

# Guardar el gráfico
plt.savefig('sea_level_prediction.png')

# Mostrar el gráfico
plt.show()